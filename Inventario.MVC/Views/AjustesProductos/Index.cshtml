@* @model IEnumerable<Inventario.Entidades.AjusteProducto> *@
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims

@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<Inventario.Entidades.AjusteProducto>
@{
    var user = User;
    var userRole = user.FindFirst("Rol")?.Value;
}

<div class="wrapper-T">
    <div class="T_box">
        <div class="T-header">
            <span>Ajustes de Inventario</span>
        </div>
        <div class="header">
          @*   <a asp-action="NewAjuste" class="btn btn-primary" id="Inventario">Crear Ajuste</a> *@
            <button type="button" id="openCreateModal" class="btn2" data-toggle="modal" data-target="#createModal">
                Nuevo Ajuste
            </button>
        </div>
        <div class="table-responsive">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.First().ID_Ajuste)</th>
                        <th>@Html.DisplayNameFor(model => model.First().NumeroAjuste)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Fecha)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Descripcion)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Impreso)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ID_Ajuste)</td>
                            <td>
                                @Html.ActionLink(@Html.DisplayTextFor(modelItem => item.NumeroAjuste).ToString(), "GetDetallesSQL", new { id = item.ID_Ajuste }, new { @class = "btn GETdata", id = "actionLink" })
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                            <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                            <td>@Html.DisplayFor(modelItem => item.Impreso)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
       @*  <div class="pagination-container">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
        </div> *@

        <div class="pagination-container">
            <ul class="pagination">
                @{
                    var prevPage = Model.PageNumber > 1 ? Model.PageNumber - 1 : 1;
                    var nextPage = Model.PageNumber < Model.PageCount ? Model.PageNumber + 1 : Model.PageCount;
                }
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = prevPage })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
           {
               LiElementClasses = new string[] { "page-item" },
               PageClasses = new string[] { "page-link" },
               DisplayLinkToFirstPage = PagedListDisplayMode.Never,
               DisplayLinkToLastPage = PagedListDisplayMode.Never,
               DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
               DisplayLinkToNextPage = PagedListDisplayMode.Never,
               MaximumPageNumbersToDisplay = 3
           })
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = nextPage })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </div>


    </div>
</div>


<!-- Modal para Create -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modalcontent2">

            <div class="modal-body">
                

            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script>



        $(document).ready(function () {
            $('#openCreateModal').on('click', function () {


                fetch('@Url.Action("NewAjuste", "AjustesProductos")')
                    .then(response => response.text())
                    .then(data => {
                        $('#createModal .modal-body').html(data);
                        $('#createModal').modal('show');
                    })
                    .catch(error => console.error('Error al obtener datos del servidor:', error));
            });
        });
    </script>

}