@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<Inventario.Entidades.Producto>
<div class="wrapper-T">
    <div class="T_box">
        <div class="T-header">
            <span>Lista de Productos</span>
        </div>
        <div class="header">
            @* <a asp-action="_CreatePartial" asp-controller="Productos" class="btn btn-primary">Crear Nuevo</a> *@
            <button type="button" class="input-submit2" data-toggle="modal" data-target="#createModal">
                Crear Nuevo
            </button>
        </div>
        <div class="table-responsive">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.First().ID_Producto)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Codigo)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Nombre)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Descripcion)</th>
                        <th>@Html.DisplayNameFor(model => model.First().GravaIVA)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Costo)</th>
                        <th>@Html.DisplayNameFor(model => model.First().PVP)</th>
                        <th>@Html.DisplayNameFor(model => model.First().Estado)</th>
                        <th>@Html.DisplayNameFor(model => model.First().StockProducto)</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ID_Producto)</td>
                            <td>@Html.DisplayFor(modelItem => item.Codigo)</td>
                            <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                            <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                            <td>@Html.DisplayFor(modelItem => item.GravaIVA)</td>
                            <td>@Html.DisplayFor(modelItem => item.Costo)</td>
                            <td>@Html.DisplayFor(modelItem => item.PVP)</td>
                            <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                            <td>@Html.DisplayFor(modelItem => item.StockProducto)</td>
                            <td>
                                @* <a asp-action="_EditPartial" asp-route-id="@item.ID_Producto" class="btn btn-primary Editar">Editar</a> *@
                                <a asp-action="EditPartial" data-id="@item.ID_Producto" class="btn2" data-toggle="modal" data-target="#editModal" id="openCreateModal">Editar</a>

                                <form asp-action="Delete" asp-route-id="@item.ID_Producto" method="post" class="inline-form" onsubmit="return confirmDelete();">
                                    <button type="submit" class="btn2">Eliminar</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="pagination-container">
            <ul class="pagination">
                @{
                    var prevPage = Model.PageNumber > 1 ? Model.PageNumber - 1 : 1;
                    var nextPage = Model.PageNumber < Model.PageCount ? Model.PageNumber + 1 : Model.PageCount;
                }
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = prevPage })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
           {
               LiElementClasses = new string[] { "page-item" },
               PageClasses = new string[] { "page-link" },
               DisplayLinkToFirstPage = PagedListDisplayMode.Never,
               DisplayLinkToLastPage = PagedListDisplayMode.Never,
               DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
               DisplayLinkToNextPage = PagedListDisplayMode.Never,
               MaximumPageNumbersToDisplay = 3
           })
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = nextPage })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>


<!-- Modal para Create -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modalcontent2">
            
            <div class="modal-body">
                @await Html.PartialAsync("_CreatePartial", new Inventario.Entidades.Producto())
            </div>
        </div>
    </div>
</div>

<!-- Modal para Edit -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modalcontent2">

            <div class="modal-body">
                <!-- El contenido del modal se cargará aquí dinámicamente -->
            </div>

        </div>
    </div>
</div>

@section Scripts {
    
    <script>
        function confirmDelete() {
            return confirm("¿Estás seguro de que deseas eliminar este producto?");
        }

        $(document).ready(function () {
            $('#openCreateModal').on('click', function () {
                var productId = $(this).data('id'); // Obtener el ID del producto desde el atributo data-id del botón

                fetch('@Url.Action("EditPartial", "Productos")?id=' + productId)
                    .then(response => response.text())
                    .then(data => {
                        $('#editModal .modal-body').html(data);
                        $('#editModal').modal('show');
                    })
                    .catch(error => console.error('Error al obtener datos del servidor:', error));
            });
        });
    </script>

}


